#!/bin/sh
################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2012 Stephan Raue (stephan@openelec.tv)
#
#  This Program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This Program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.tv; see the file COPYING.  If not, write to
#  the Free Software Foundation, 51 Franklin Street, Suite 500, Boston, MA 02110, USA.
#  http://www.gnu.org/copyleft/gpl.html
################################################################################

if [ -e /storage/.please_resize_me ] ; then
  # get the disk. /storage on 2nd partition
  PART=$(grep "/storage " /proc/mounts | cut -d" " -f1 | grep '2$')

  # get disk: /dev/sdx2 -> /dev/sdx, /dev/mmcblkxp2 -> /dev/mmcblkx
  case $PART in
    "/dev/mmcblk"*)
      DISK=$(echo $PART | sed s/p2$//g)
      ;;
    *)
      DISK=$(echo $PART | sed s/2$//g)
      ;;
  esac

  # just in case
  if [ ! -z "$DISK" -a ! -z "$PART" ] ; then
    # get storage partition start
    PART_START=$(parted -s -m $DISK unit b print |grep -v ^/dev |grep -v BYT | grep ^2: |  cut -f2 -d ":")

    # failed to get partition start offset ?
    if [ ! -z "$PART_START" ] ; then
      rm -f /storage/.please_resize_me
      sync
      umount $PART
      # TODO: clean up debug
      echo resizing /storage...
      echo ""
      echo ... parted -s -m $DISK rm 2
      parted -s -m $DISK rm 2 &>/dev/null
      echo ""
      echo ... parted -s -m $DISK unit b mkpart primary $PART_START 100%
      parted -s -m $DISK unit b mkpart primary $PART_START 100% &>/dev/null
      echo ""
      echo ... e2fsck -f -p $PART
      e2fsck -f -p $PART &>/dev/null
      echo ""
      echo ... resize2fs $PART
      resize2fs $PART &>/dev/null
      echo ""
      echo ...done. rebooting in 30s
      sleep 30
      reboot
    fi
  fi
fi
