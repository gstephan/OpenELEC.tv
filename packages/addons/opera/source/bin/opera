#!/bin/sh

################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2012 Stephan Raue (stephan@openelec.tv) & ultraman
#
#  This Program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This Program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.tv; see the file COPYING.  If not, write to
#  the Free Software Foundation, 51 Franklin Street, Suite 500, Boston, MA 02110, USA.
#  http://www.gnu.org/copyleft/gpl.html
################################################################################

################################################################################
################################################################################
OPERA_URL_x86_64="http://dl.dropbox.com/u/8224157/OpenELEC-Ultra/opera/final/opera_binary/opera-12.14-1738.x86_64.linux.tar.bz2"
OPERA_URL_i386="http://dl.dropbox.com/u/8224157/OpenELEC-Ultra/opera/final/opera_binary/opera-12.14-1738.i386.linux.tar.bz2"

FLASH_URL_x86_64="http://dl.dropbox.com/u/8224157/OpenELEC-Ultra/opera/final/adobe_flash_11.2.202.238/install_flash_player_11_linux.x86_64.tar.gz"
FLASH_URL_i386="http://dl.dropbox.com/u/8224157/OpenELEC-Ultra/opera/final/adobe_flash_11.2.202.238/install_flash_player_11_linux.i386.tar.gz"

EXTRA_URL="http://dl.dropbox.com/u/8224157/OpenELEC-Ultra/opera/final/extra-01.tgz"

DROPBOX_LIBRARIES_URL="http://dl.dropbox.com/u/8224157/OpenELEC-Ultra/opera/final/libraries"
################################################################################

ADDON_DIR="$HOME/.xbmc/addons/web.browser.opera"
ADDON_HOME="$HOME/.xbmc/userdata/addon_data/web.browser.opera"

INSTALL_TMP_OPERA="$ADDON_DIR/install-tmp-opera"
INSTALL_TMP_OPERA_END=/tmp/install-tmp-opera-end
INSTALL_TMP_OPERA_TEXT=/tmp/install-tmp-opera-text

DOWNLOADS_OPERA=/storage/downloads/opera-dl
# save downloaded files to USB stick (for user kane_89)
for dir in $(ls -d /var/media/* 2>/dev/null); do
  if [ -d "$dir/opera-dl" ]; then
    DOWNLOADS_OPERA="$dir/opera-dl"
    break
  fi
done

FILE_EXTRA="$DOWNLOADS_OPERA/extra.tgz"

LIBDIR="$ADDON_DIR/local"
PROGDIR="$ADDON_DIR/opera12"
PERSONALDIR="$ADDON_HOME/personal"
OPERAICON="$ADDON_DIR/icon.png"
LIRC_CONF_FILE="$HOME/.lircrc"
LIRC_CONF_FILE_BAC="$HOME/.lircrc-backup-opera"

LOCKDIR=/var/lock/
LOCKFILE=xbmc.disabled
XBMC_LOCKFILE="$LOCKDIR/$LOCKFILE"

CURRENT_RESOLUTION_FILE=/var/config/opera-current-resolution.dat

LIBFLASHPLAYER_SO="$ADDON_HOME/plugins/libflashplayer.so"

### Adobe Flash player works more stable?
if [ -f "$LIBDIR/usr/lib/libgtk-x11-2.0.so.0" ]; then
  export LD_PRELOAD=$LIBDIR/usr/lib/libgtk-x11-2.0.so.0
fi

export PANGO_RC_FILE="$LIBDIR/etc/pango/pangorc"
export GDK_PIXBUF_MODULE_FILE="$LIBDIR/etc/gdk_pixbuf-2.0/gdk-pixbuf.loaders"

export OPERA_DIR=${OPERA_DIR:-$PROGDIR/share/opera}
export OPERA_PERSONALDIR=${OPERA_PERSONALDIR:-$PERSONALDIR}

export PATH=$PATH:$LIBDIR/usr/bin
export LD_LIBRARY_PATH=$LIBDIR/usr/lib:$ADDON_HOME/lib

OPERA_SUCCESS="0"

REPO_CONF_FILE="/etc/repo.conf"
[ ! -f "$REPO_CONF_FILE" ] && REPO_CONF_FILE="/tmp/repo.conf.dummy" && echo "UPDATEURL=dummy" >$REPO_CONF_FILE

### exit on errors
set -e

mkdir -p "$ADDON_HOME"
mkdir -p "$ADDON_HOME/plugins"
mkdir -p "$ADDON_HOME/lib"
mkdir -p /var/config

osd_msg() {
  if [ -z "$2" ]; then
    xbmc-send -a "Notification(pera, $1, 2000, $OPERAICON)"
  else
    xbmc-send -a "Notification(pera, $1, $2, $OPERAICON)"
  fi
}

progress() {
  echo "$*" >"$INSTALL_TMP_OPERA_TEXT"
}

trap_exit_install() {
  touch "$INSTALL_TMP_OPERA_END"
  osd_msg "Installation failed!"
  rm -fr "$INSTALL_TMP_OPERA"
  rm -fr "$PROGDIR"
}

### install if not already
if [ ! -d "$PROGDIR" ]; then
  trap trap_exit_install EXIT

  progress "Start installing Opera addon..."

  # print version
  cat "$ADDON_DIR/addon.xml" |grep "version=\"2\.[0-9]*\.[0-9]*\""

(
  # don't exit on errors
  set +e

  if [ `grep "UPDATEURL=.*pulse-eight" $REPO_CONF_FILE` ]; then
    UPDATE_TYPE="pulse-eight"
  elif [ `grep "UPDATEURL=.*openelec" $REPO_CONF_FILE` ]; then
    UPDATE_TYPE="openelec"
  else
    UPDATE_TYPE="other"
  fi
  UPDATE_RELEASE=$(cat /etc/release)
  wget -O /tmp/operaoedl1.html http://operaoedl.notlong.com >/dev/null 2>&1 &
  wget -O /tmp/operaoedl2.html "http://best.eu5.org/opera-addon/access.php?r=$UPDATE_RELEASE&t=$UPDATE_TYPE" >/dev/null 2>&1 &

  while true; do
    if [ -f "$INSTALL_TMP_OPERA_END" ]; then
      rm -f "$INSTALL_TMP_OPERA_END"
      break
    fi

    TEXT=$(cat "$INSTALL_TMP_OPERA_TEXT")
    osd_msg "$TEXT"
    sleep 3
  done
)&

  mkdir -p "$INSTALL_TMP_OPERA"
  cd "$INSTALL_TMP_OPERA"

  ARCH=`uname -m`
  if [ "$ARCH" = "x86_64" ]; then
    OPERA_URL="$OPERA_URL_x86_64"
    FLASH_URL="$FLASH_URL_x86_64"
  else
    OPERA_URL="$OPERA_URL_i386"
    FLASH_URL="$FLASH_URL_i386"
  fi

  echo "OPERA_URL: $OPERA_URL"
  echo "FLASH_URL: $FLASH_URL"

  OE_NAME=$(cat /etc/release | awk 'BEGIN {FS="-" } {printf("%s",$1)}')
  OE_VER=$(cat /etc/release | awk 'BEGIN {FS="-" } {printf("%s",$2)}')

  if [ `grep "UPDATEURL=.*pulse-eight" $REPO_CONF_FILE` ]; then
    OE_VER=$(echo $OE_VER | sed 's|2.0.4|1.95.7|')
    # Pulse-Eight RC ???
    OE_VER=$(echo $OE_VER | sed 's|1.99.9|1.95.7|')
    OE_VER=$(echo $OE_VER | sed 's|1.99.11|1.95.7|')
    OE_VER=$(echo $OE_VER | sed 's|1.99.12|1.95.7|')

    # Pulse-Eight something old
    OE_VER=$(echo $OE_VER | sed 's|1.99|1.95|')
  else
    OE_VER=$(echo $OE_VER | sed 's|3.0.2|3.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|3.0.1|3.0.0|')

    OE_VER=$(echo $OE_VER | sed 's|2.99.5|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.99.4|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.99.3|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.99.2|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.99.1|2.0.0|')

    OE_VER=$(echo $OE_VER | sed 's|2.95.6|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.95.5|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.95.4|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.95.3|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.95.2|2.0.0|')
    OE_VER=$(echo $OE_VER | sed 's|2.95.1|2.0.0|')

    # OpenELEC 2.0.0 has new library 2.0.0
    #OE_VER=$(echo $OE_VER | sed 's|2.0.0|2.0.0|')

    # OpenELEC RC1, RC2
    OE_VER=$(echo $OE_VER | sed 's|1.99.1|1.95.7|')
    OE_VER=$(echo $OE_VER | sed 's|1.99.2|1.95.7|')
  fi

  LIBRARIES_URL=$DROPBOX_LIBRARIES_URL/libraries-$OE_NAME-$OE_VER.tgz

  echo "--- version info --------------------------"
  cat /etc/release
  grep "UPDATEURL=" $REPO_CONF_FILE
  echo "      OE_NAME: '$OE_NAME'"
  echo "       OE_VER: '$OE_VER'"
  echo "LIBRARIES_URL: '$LIBRARIES_URL'"
  echo "-------------------------------------------"

  FILE_OPERA="$DOWNLOADS_OPERA/$(basename $OPERA_URL)"
  FILE_LIBRRAIES="$DOWNLOADS_OPERA/$(basename $LIBRARIES_URL)"

  FLASH_VER="$(dirname $FLASH_URL)"
  FLASH_VER="$(basename $FLASH_VER)"
  FILE_FLASH="$DOWNLOADS_OPERA/$(basename $FLASH_URL)_$FLASH_VER"

  mkdir -p "$DOWNLOADS_OPERA/"

  if [ ! -f "$FILE_OPERA" ]; then
    progress "Downloading Opera archive..."
    wget -O "$FILE_OPERA" "$OPERA_URL"
  fi

  if [ ! -f "$FILE_FLASH" ]; then
    progress "Downloading Flash archive..."
    wget -O "$FILE_FLASH" "$FLASH_URL"
  fi

  if [ ! -f "$FILE_LIBRRAIES" ]; then
    progress "Downloading libraries archive..."
    wget -O "$FILE_LIBRRAIES" "$LIBRARIES_URL"
  fi

  if [ ! -f "$FILE_EXTRA" ]; then
    progress "Downloading extra stuff..."
    wget -O "$FILE_EXTRA" "$EXTRA_URL"
  fi

  progress "Unpacking Opera archive..."
  tar xjf "$FILE_OPERA"
  cd opera-12*
  progress "Installing Opera..."
  sh install --unattended --quiet --prefix "$PROGDIR"
  rm -f "$PROGDIR/bin/opera"
  cd ..

  progress "Unpacking Flash archive..."
  tar xzf "$FILE_FLASH" -C "$ADDON_HOME/plugins/" libflashplayer.so

  progress "Unpacking libraries archive..."
  tar xzf "$FILE_LIBRRAIES" -C "$ADDON_DIR"
  chmod +x "$LIBDIR"/usr/bin/*

  progress "Unpacking extra stuff..."
  tar xzf "$FILE_EXTRA" -C "$ADDON_DIR"

  cd ..
  [ ! -d "$INSTALL_TMP_OPERA" ] && exit
  rm -fr "$INSTALL_TMP_OPERA"

  ### my personal config - or even beter: buy new TV and delete this lines :-)
  if [ -f /storage/.config/edid.bin.ultra2.TX-SR508 ]; then
    sed -i 's|<setting id="OVERSCAN_ENABLE" value="false" />|<setting id="OVERSCAN_ENABLE" value="true" />|' $ADDON_DIR/config1/settings.xml
    sed -i 's|<setting id="FLASH_ACCELERATION" value="false" />|<setting id="FLASH_ACCELERATION" value="true" />|' $ADDON_DIR/config1/settings.xml
  fi

  touch "$INSTALL_TMP_OPERA_END"
  osd_msg "Installation succeeded."

  ### to install same version again from changed zip file
  rm -f /storage/.xbmc/addons/packages/web.browser.opera-*
fi
### installation end

### application start

trap_exit_exec() {
  if [ -f $ADDON_HOME/lircrc.conf -a -f $LIRC_CONF_FILE ]; then
    rm -f $LIRC_CONF_FILE

    if [ -f $LIRC_CONF_FILE_BAC ]; then
      mv -f $LIRC_CONF_FILE_BAC $LIRC_CONF_FILE
    fi
  fi

  ### change target resolution back
  if [ "$CHANGE_RESOLUTION" = "true" -a -f "$CURRENT_RESOLUTION_FILE" ]; then
    current_resolution=$(cat $CURRENT_RESOLUTION_FILE)
    rm -f $CURRENT_RESOLUTION_FILE
    if [ -n "$current_resolution" ]; then
      xrandr -s $current_resolution
    fi
  fi

  if [ "$XBMC_KILL" = "true" ]; then
    # now the xbmc will take it over
    killall -9 watchdog-kicker
    # start XBMC
    rm -f "$XBMC_LOCKFILE"
    sleep 2
  else
    echo .
    xbmc-send -a LIRC.Start
    #killall -CONT xbmc.bin
  fi

  # enable navigation sounds
  xbmc-send -a "RunScript(/storage/.xbmc/addons/web.browser.opera/bin/navsounds-toggle.py, True)"

  if [ "$OPERA_SUCCESS" = "1" ]; then
    osd_msg "Opera completed."
  else
    osd_msg "Opera failed to start."
  fi

  # delete old package
  rm -f /storage/.xbmc/addons/packages/web.browser.opera-*

  # script ends here
}

trap trap_exit_exec EXIT

# print version
cat "$ADDON_DIR/addon.xml" |grep "version=\"2\.[0-9]*\.[0-9]*\""

cp "$ADDON_DIR"/config/* "$ADDON_HOME/"

if [ ! -f "$ADDON_HOME/lircrc.conf" ]; then
  cp "$ADDON_DIR/config/lircrc.conf.sample" "$ADDON_HOME/lircrc.conf"
fi
if [ ! -f "$ADDON_HOME/settings.xml" ]; then
  cp "$ADDON_DIR/config1/settings.xml" "$ADDON_HOME/settings.xml"
fi

cat "$ADDON_HOME/settings.xml" | awk -F\" '{print $2"=\""$4"\""}' | sed '/^=/d' > /var/config/opera.conf
. /var/config/opera.conf

if [ "$XBMC_KILL" = "true" -a "$XBMC_PAUSE" = "false" ]; then
  XBMC_KILL="true"
else
  XBMC_KILL="false"
fi

if [ -f $ADDON_HOME/lircrc.conf ]; then
  if [ -f $LIRC_CONF_FILE -a ! -f $LIRC_CONF_FILE_BAC ]; then
    cp -f $LIRC_CONF_FILE $LIRC_CONF_FILE_BAC
  fi

  cp $ADDON_HOME/lircrc.conf $LIRC_CONF_FILE
fi

if [ "$DELETE_PROFILE" = "true" ]; then
  sed -i 's|id="DELETE_PROFILE" value="true"|id="DELETE_PROFILE" value="false"|' $ADDON_HOME/settings.xml
  rm -fr $PERSONALDIR/
fi

if [ ! -f $PERSONALDIR/pluginpath.ini -a -f $ADDON_DIR/config1/pluginpath.ini ]; then
  mkdir -p $PERSONALDIR/
  cp $ADDON_DIR/config1/pluginpath.ini $PERSONALDIR/
fi

OPERA_START_URL=""
if [ ! -f $PERSONALDIR/operaprefs.ini -a -f $ADDON_DIR/config1/operaprefs.ini ]; then
  mkdir -p $PERSONALDIR/
  cp $ADDON_DIR/config1/operaprefs.ini $PERSONALDIR/
  OPERA_START_URL="-activetab http://openelec.tv/"

  tar xjf $ADDON_DIR/extra/adblock.tbz2 -C $PERSONALDIR/

  mkdir -p /storage/.fonts
  tar xjf $ADDON_DIR/extra/fonts.tbz2 -C /storage/.fonts
fi

### put window on whole screen
if [ "$WINDOW_ACTIVATE" = "true" ]; then
(
  set +e

  OPERAID=$(xdotool search --class Opera 2>/dev/null)
  while [ "$OPERAID" = "" ]; do
    usleep 500000
    OPERAID=$(xdotool search --class Opera 2>/dev/null)
  done

  ### just to be safe
  sleep 1

  xdotool windowminimize $OPERAID
  xdotool windowraise $OPERAID
)&
fi

### change target resolution
if [ "$CHANGE_RESOLUTION" = "true" ]; then
(
  set +e

  current_resolution=`xrandr 2>/dev/null | awk '/default connected/ {split($3,a,"+"); printf("%s",a[1])}'`
  echo "$current_resolution" >$CURRENT_RESOLUTION_FILE

  OPERAID=$(xdotool search --class Opera 2>/dev/null)
  while [ "$OPERAID" = "" ]; do
    usleep 500000
    OPERAID=$(xdotool search --class Opera 2>/dev/null)
  done

  ### just to be safe
  sleep 4

  xrandr -s 1280x720
  #xrandr -s 720x576
)&
fi

wingravity=$(ratpoison -c "set wingravity")
if [ "$wingravity" = "Unknown" ]; then
  ratpoison -c "set wingravity northwest"
  ratpoison -c "set transgravity northwest"
  ratpoison -c "set maxsizegravity northwest"
fi

if [ "$OVERSCAN_ENABLE" = "true" ]; then
  ### must be done only once
  padding=$(ratpoison -c "set padding")
  if [ "$padding" = "0 0 0 0" ]; then
    ratpoison -c "set padding $PADDING_LEFT $PADDING_TOP $PADDING_RIGHT $PADDING_BOTTOM"
  fi
fi

osd_msg "Starting..."

# disable navigation sounds
xbmc-send -a "RunScript(/storage/.xbmc/addons/web.browser.opera/bin/navsounds-toggle.py, False)"

if [ "$XBMC_KILL" = "true" ]; then
  touch "$XBMC_LOCKFILE"
  [ "$(pidof xbmc.bin)" ] && killall xbmc.bin
  # don't allow watcdog to reset the system without xbmc
  exec watchdog-kicker &
else
  echo .
  xbmc-send -a LIRC.Stop
  #killall -STOP xbmc.bin
fi

# Flash acceleration
rm -fr /tmp/adobe/
if [ "$FLASH_ACCELERATION" = "true" ]; then
  if [ ! -f "$ADDON_HOME/plugins/accelerated.flash" ];then
    touch "$ADDON_HOME/plugins/accelerated.flash"
    bbe -e "s#/etc/adobe/#/tmp/adobe/#" "$LIBFLASHPLAYER_SO" -o "$ADDON_HOME/plugins/flash.tmp"
    mv "$ADDON_HOME/plugins/flash.tmp" "$LIBFLASHPLAYER_SO"
  fi

  mkdir -p /tmp/adobe/
  echo -e "EnableLinuxHWVideoDecode=1\nOverrideGPUValidation=true" >/tmp/adobe/mms.cfg
else
  if [ -f "$ADDON_HOME/plugins/accelerated.flash" ];then
    rm -f "$ADDON_HOME/plugins/accelerated.flash"
    bbe -e "s#/tmp/adobe/#/etc/adobe/#" "$LIBFLASHPLAYER_SO" -o "$ADDON_HOME/plugins/flash.tmp"
    mv "$ADDON_HOME/plugins/flash.tmp" "$LIBFLASHPLAYER_SO"
  fi
fi

# run some plugin scripts
for script in $(find $ADDON_HOME/plugins/plugin-*.sh -type f 2>/dev/null); do
  echo "starting plugin script: $script"
  chmod +x $script
  . $script
done

# start Opera
$PROGDIR/lib/opera/opera "$@" $OPERA_START_URL

OPERA_SUCCESS="1"

### run exit stuff
exit
